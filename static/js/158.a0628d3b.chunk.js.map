{"version":3,"file":"static/js/158.a0628d3b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","pages/Movies.styled.js","pages/Movies.jsx","services/moviesAPI.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\",\"animate\":\"Loader_animate__+YIar\"};","import css from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css.loader}>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  width: 90vw;\n  margin-left: auto;\n  margin-right: auto;\n  gap: 20px;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  color: #fff;\n  font-size: 14px;\n`;\n\nexport const MTitle = styled.h3`\n  padding: 8px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  width: 18%;\n  background-color: #212121;\n  padding-bottom: 5px;\n  border-radius: 5px;\n  border: 2px solid #2af598;\n  overflow: hidden;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  flex-grow: 1;\n`;\n\nexport const Button = styled.button`\n  background-color: #08aeea;\n  background-image: linear-gradient(0deg, #08aeea 0%, #2af598 100%);\n  border-radius: 5px;\n  font-family: Dosis;\n  width: 85px;\n  height: 40px;\n  padding: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #212121;\n  font-size: 24px;\n  border: 2px solid #212121;\n  cursor: pointer;\n  &:hover {\n    color: #fff;\n    border: 2px solid #fff;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  border-radius: 5px;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  height: 40px;\n  padding-left: 10px;\n  padding-right: 4px;\n  color: #fff;\n  background-color: #212121;\n  &:focus::placeholder {\n    color: transparent;\n  }\n  &::placeholder {\n    color: #2af598;\n    opacity: 1;\n    font-family: pacifico;\n    font-size: 18px;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 5px;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useSearchParams, useLocation, Outlet } from 'react-router-dom';\nimport { fetchMovieBySearch } from 'services/moviesAPI';\nimport { Loader } from 'components/Loader/Loader';\nimport img from '../images/no_poster.jpg';\nimport {\n  List,\n  ListItem,\n  Img,\n  StyledLink,\n  MTitle,\n  Input,\n  Button,\n  Form,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [error, setError] = useState('');\n  const query = searchParams.get('title');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === null || query === '') return;\n    const fetchMovies = async () => {\n      try {\n        const data = await fetchMovieBySearch(query);\n        setMovies(data.results);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchMovies();\n  }, [query, error]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    setSearchParams({ title: form.elements.query.value.trim() });\n    form.reset();\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"query\" placeholder=\"Search movies\" />\n        <Button>Search</Button>\n      </Form>\n      {movies && (\n        <>\n          <Suspense fallback={<Loader />}>\n            <List>\n              {movies.map(({ title, id, poster_path }) => (\n                <ListItem key={id}>\n                  <StyledLink to={id.toString()} state={{ from: location }}>\n                    {(poster_path && (\n                      <Img\n                        src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                        alt={title}\n                        width=\"200\"\n                      />\n                    )) || <Img src={img} alt={title} width=\"200\" />}\n                    <MTitle>{title}</MTitle>\n                  </StyledLink>\n                </ListItem>\n              ))}\n            </List>\n          </Suspense>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst KEY = '894a5fcb5eb3af426933275e70f0cd83';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieById(movie_id) {\n  const response = await axios(`movie/${movie_id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieBySearch(query) {\n  const response = await axios(`search/movie`, {\n    params: {\n      api_key: KEY,\n      query,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieCast(movie_id) {\n  const response = await axios(`movie/${movie_id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(movie_id) {\n  const response = await axios(`movie/${movie_id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\n"],"names":["Loader","className","css","List","styled","StyledLink","Link","MTitle","ListItem","Img","Button","Input","Form","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","error","setError","query","get","location","useLocation","useEffect","fetchMovies","fetchMovieBySearch","data","results","message","onSubmit","event","preventDefault","form","target","title","elements","value","trim","reset","type","name","placeholder","Suspense","fallback","map","id","poster_path","to","toString","state","from","src","alt","width","img","KEY","fetchTrendingMovies","axios","params","api_key","response","fetchMovieById","movie_id","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}