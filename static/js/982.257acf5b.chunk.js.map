{"version":3,"file":"static/js/982.257acf5b.chunk.js","mappings":"wRAEaA,EAAOC,EAAAA,GAAAA,GAAH,+QAgBJC,EAAWD,EAAAA,GAAAA,GAAH,yKAURE,EAAIF,EAAAA,GAAAA,GAAH,2CAIDG,EAAIH,EAAAA,GAAAA,EAAH,qF,SCRd,EArBgB,WACd,IAAMI,ECA4B,WAClC,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOD,EAAP,KAAgBE,EAAhB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEMC,EAAAA,EAAAA,IAAkBJ,GAFxB,OAEXK,EAFW,OAGjBN,EAAWM,GAHM,gDAKjBC,QAAQC,IAAI,KAAMC,SALD,yDAAH,qDAQlBL,GACD,GAAE,CAACH,IAEGH,CACR,CDjBiBY,GAEhB,OACE,8BACGZ,GAAWA,EAAQa,QAAQC,OAAS,GACnC,SAACnB,EAAD,UACGK,EAAQa,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACnB,UAACrB,EAAD,YACE,SAACC,EAAD,UAAImB,KACJ,uBAAIC,MAFSF,EADI,OAQvB,SAACjB,EAAD,wDAIP,C,mMErBKoB,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASJ,KAHR,cACCX,EADD,yBAMEA,EAASgB,MANX,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BtB,GAA9B,wFACkBkB,EAAAA,EAAAA,GAAM,SAAD,OAAUlB,GAAY,CAChDmB,OAAQ,CACNC,QAASJ,KAHR,cACCX,EADD,yBAMEA,EAASgB,MANX,kEASA,SAAeE,EAAtB,iDAAO,OAAP,oBAAO,WAAkCC,EAAOC,GAAzC,wFACkBP,EAAAA,EAAAA,GAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASJ,EACTQ,MAAAA,EACAC,KAAAA,KALC,UAQgC,KAP/BpB,EADD,QAQQgB,KAAKX,QAAQC,OARrB,sBASGe,MATH,gCAUSrB,EAASgB,MAVlB,kEAaA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8B3B,GAA9B,wFACkBkB,EAAAA,EAAAA,GAAM,SAAD,OAAUlB,EAAV,YAA8B,CACxDmB,OAAQ,CACNC,QAASJ,KAHR,cACCX,EADD,yBAMEA,EAASgB,MANX,kEASA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCJ,GAAjC,wFACkBkB,EAAAA,EAAAA,GAAM,SAAD,OAAUlB,EAAV,YAA8B,CACxDmB,OAAQ,CACNC,QAASJ,KAHR,cACCX,EADD,yBAMEA,EAASgB,MANX,kEA1CPH,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","hooks/useFetchMovieReviews.jsx","services/moviesAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  font-size: 17px;\n  width: 80%;\n  margin-top: -18px;\n\n  @media screen and (min-width: 768px) {\n    width: 70%;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 45%;\n  }\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  background-color: #212121;\n  color: #fff;\n  border-radius: 5px;\n  padding: 20px;\n`;\n\nexport const A = styled.h3`\n  color: #08aeea;\n`;\n\nexport const P = styled.p`\n  margin-top: -20px;\n  font-size: 18px;\n  color: #252525;\n`;\n","import { useFetchMovieReviews } from 'hooks/useFetchMovieReviews';\nimport { List, ListItem, A, P } from './Reviews.styled';\n\nconst Reviews = () => {\n  const reviews = useFetchMovieReviews();\n\n  return (\n    <>\n      {reviews && reviews.results.length > 0 ? (\n        <List>\n          {reviews.results.map(({ id, author, content }) => (\n            <ListItem key={id}>\n              <A>{author}</A>\n              <p>{content}</p>\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <P>We don't have any reviews for this Movie</P>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/moviesAPI';\n\nexport const useFetchMovieReviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movie_id } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await fetchMovieReviews(movie_id);\n        setReviews(response);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchReviews();\n  }, [movie_id]);\n\n  return reviews;\n};\n","import axios from 'axios';\nconst KEY = '894a5fcb5eb3af426933275e70f0cd83';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieById(movie_id) {\n  const response = await axios(`movie/${movie_id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieBySearch(query, page) {\n  const response = await axios(`search/movie`, {\n    params: {\n      api_key: KEY,\n      query,\n      page,\n    },\n  });\n  if (response.data.results.length === 0) {\n    throw Error;\n  } else return response.data;\n}\n\nexport async function fetchMovieCast(movie_id) {\n  const response = await axios(`movie/${movie_id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(movie_id) {\n  const response = await axios(`movie/${movie_id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\n"],"names":["List","styled","ListItem","A","P","reviews","useState","setReviews","movie_id","useParams","useEffect","fetchReviews","fetchMovieReviews","response","console","log","message","useFetchMovieReviews","results","length","map","id","author","content","KEY","fetchTrendingMovies","axios","params","api_key","data","fetchMovieById","fetchMovieBySearch","query","page","Error","fetchMovieCast"],"sourceRoot":""}